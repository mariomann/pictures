{
    "swagger": "2.0",
    "info": {
        "title": "inspectIT API",
        "description": "Get your performance data with the inspectIT API.\n\nIn order to support the continuous load testing during the continuous integration process, which has become very popular lately, the inspectIT team has decided to provide limited storage services via RESTful protocol. This article describes all the provided services in details.\n",
        "version": "0.1.0"
    },
    "host": "localhost:8182",
    "schemes": [
        "http"
    ],
    "basePath": "/rest",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/storage/all": {
            "get": {
                "summary": "Storage Service",
                "description": "Get all existing storages",
                "tags": [
                    "Storage"
                ],
                "responses": {
                    "200": {
                        "description": "A list of currently existing storages on the CMR",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Storage"
                            }
                        }
                    },
                    "default": {
                        "description": "Empty array"
                    }
                }
            }
        },
        "/storage/get?id={id}": {
            "get": {
                "summary": "Storage Service",
                "description": "Find storage by ID",
                "tags": [
                    "Storage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of storage to use",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "storage response",
                        "schema": {
                            "$ref": "#/definitions/Storage"
                        }
                    },
                    "default": {
                        "description": "Empty object"
                    }
                }
            }
        },
        "/storage/create?name={name}": {
            "get": {
                "summary": "Storage Service",
                "description": "Create storage by name",
                "tags": [
                    "Storage"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of new storage",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new storage response",
                        "schema": {
                            "$ref": "#/definitions/Storage"
                        }
                    },
                    "default": {
                        "description": "Empty object"
                    }
                }
            }
        },
        "/storage/finalize?id={id}": {
            "get": {
                "summary": "Storage Service",
                "description": "Enables the finalization of existing storage",
                "tags": [
                    "Storage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of storage to be finalized",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reslut message",
                        "schema": {
                            "$ref": "#/definitions/message"
                        }
                    }
                }
            }
        },
        "/storage/delete?id={id}": {
            "get": {
                "summary": "Storage Service",
                "description": "Delete an existing storage",
                "tags": [
                    "Storage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of storage to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result message",
                        "schema": {
                            "$ref": "#/definitions/message"
                        }
                    }
                }
            }
        },
        "/storage/recording-state": {
            "get": {
                "summary": "Storage Service",
                "description": "current recording state",
                "tags": [
                    "Storage"
                ],
                "responses": {
                    "200": {
                        "description": "current recording state",
                        "schema": {
                            "$ref": "#/definitions/recordingStatus"
                        }
                    }
                }
            }
        },
        "/storage/start-recording?id={id}": {
            "get": {
                "summary": "Storage Service",
                "description": "Enables that the recording is started or scheduled to be started in the future",
                "tags": [
                    "Storage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of storage",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "storage response",
                        "schema": {
                            "$ref": "#/definitions/Storage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "recordingStatus": {
            "type": "object",
            "properties": {
                "recordingStatus": {
                    "type": "string",
                    "description": "recording state",
                    "enum": [
                        "ON",
                        "OFF",
                        "SCHEDULED"
                    ]
                }
            }
        },
        "message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "text of the message"
                }
            }
        },
        "Storage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific storage which can find on the given CMR."
                },
                "name": {
                    "type": "string",
                    "description": "Name of storage."
                },
                "diskSize": {
                    "type": "integer",
                    "description": "Size of storage in KB. For example 112."
                },
                "description": {
                    "type": "string",
                    "description": "Description of storage."
                },
                "cmrVersion": {
                    "type": "string",
                    "description": "Version of CMR."
                },
                "labelList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/labelList"
                    }
                },
                "state": {
                    "type": "string",
                    "description": "State of storage. For example OPEN"
                },
                "storageRecording": {
                    "type": "boolean",
                    "description": "TODO"
                },
                "storageClosed": {
                    "type": "boolean",
                    "description": "TODO"
                },
                "storageOpened": {
                    "type": "boolean",
                    "description": "TODO"
                },
                "storageFolder": {
                    "type": "string",
                    "description": "For example \"648ab3c3-5980-4aa3-96cd-c7d360a3b9e9\""
                }
            }
        },
        "labelList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Label-ID"
                },
                "dateValue": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TODO"
                },
                "storageLabelType": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storageLabelType"
                    }
                },
                "value": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TODO"
                },
                "formatedValue": {
                    "type": "string",
                    "description": "human readable date value. For example \"Feb 14, 2016\""
                }
            }
        },
        "storageLabelType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Storage-Label-Type-ID"
                },
                "onePerStorage": {
                    "type": "boolean",
                    "description": "TODO"
                },
                "editable": {
                    "type": "boolean",
                    "description": "Description if Storage-Label is editable."
                },
                "valueReusable": {
                    "type": "boolean",
                    "description": "TODO"
                },
                "multiType": {
                    "type": "boolean",
                    "description": "TODO"
                },
                "valueClass": {
                    "type": "string",
                    "description": "For example java.util.Date"
                },
                "groupingEnabled": {
                    "type": "boolean",
                    "description": "TODO"
                }
            }
        }
    }
}